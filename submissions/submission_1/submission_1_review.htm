<!DOCTYPE html>
<!-- saved from url=(0044)https://review.udacity.com/#!/reviews/182337 -->
<html data-ng-app="udacity.grading" data-enforce-browser="" class="ng-scope"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style><style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll;}</style><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
    <!--[if lte IE 9]>
    <script type="text/javascript">
      window.location = 'https://www.udacity.com/upgrade';
    </script>
    <![endif]-->
    <title>Udacity Reviews</title>
    
    <link rel="shortcut icon" href="https://review.udacity.com/assets/images/favicon.ico">
    <meta name="description" content="Discover online classes taught by top instructors and industry experts. Take courses at your own pace.">

    <meta name="robots" content="noodp">

    <!--
      These properties are here so social shares of review pages works
      properly. We decided to let them apply to every page on the site
      because we only expect people to share the review pages.

      Guidelines obtained from https://moz.com/blog/meta-data-templates-123
    -->

    <!-- facebook -->
    <meta property="og:title" content="Look at my Udacity Project Feedback!">
    <meta property="og:description" content="A review of my work and personalized tips to improve.">
    <meta property="og:image" content="https://s3-us-west-1.amazonaws.com/udacity-content/images/reviews/facebook-thumbnail-neutral.png ">

    <!-- twitter -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@udacity">
    <meta name="twitter:title" content="Udacity Project Feedback">
    <meta name="twitter:description" content="A review of my work and personalized tips to improve.">
    <!-- "Twitter Summary card images must be at least 120x120px" -->
    <meta name="twitter:image" content="https://s3-us-west-1.amazonaws.com/udacity-content/images/reviews/twitter-thumbnail-neutral.png ">

    <meta name="application-name" content="Udacity">
    <meta name="msapplication-TileColor" content="#FFFFFF">
    <meta name="msapplication-TileImage" content="assets/img/logos/udacity/windows_tile/udacity-full-144x144.png">

    <meta name="google-site-verification" content="ELX2btu3VElBKIdvkGj5ESBnJh_Dg9PnWjuCwVkPEkA">

    <meta http-equiv="X-UA-Compatible" content="requiresActiveX=true">

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="apple-touch-icon" href="https://review.udacity.com/assets/images/apple-touch-icon.png">

    <link type="text/plain" rel="author" href="http://udacity.com/humans.txt">

    <link href="./submission_1_review_files/css" rel="stylesheet" type="text/css">
    <link href="./submission_1_review_files/css(1)" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="./submission_1_review_files/udacity-base.min.css" type="text/css">
    <!-- ngIf: googleBranded -->

    <!-- inject:css -->
    <link rel="stylesheet" href="./submission_1_review_files/grading_3841b78e.css">
    <!-- endinject -->

    <style>
    @font-face {
      font-family: 'Glyphicons Halflings';

      src: url('/assets/fonts/glyphicons/glyphicons-halflings-regular.eot');
      src: url('/assets/fonts/glyphicons/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.woff2') format('woff2'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.woff') format('woff'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.ttf') format('truetype'), url('/assets/fonts/glyphicons/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');
    }
    </style>
    <script src="./submission_1_review_files/airbrake.min.js" async=""></script><script src="./submission_1_review_files/airbrake.min.js" async=""></script><script type="text/javascript" async="" src="./submission_1_review_files/amplitude-3.0.2-min.gz.js"></script><script async="" src="./submission_1_review_files/p.js"></script><script type="text/javascript" async="" src="./submission_1_review_files/analytics.min.js"></script><script type="text/javascript">
      var segment_write_key = "toT8LUD8hh9KKz18k1i8l8AnAJlF27VY"; // production key for segment
    </script>
    <script type="text/javascript">
      !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.1.0";
        analytics.load(segment_write_key);
      }}();
    </script>

  </head>
  <body data-modal-anti-scroll-helper="" class="responsive ng-class:{&#39;google-certs&#39;: googleBranded} ng-scope" ng-controller="MainCtrl as main">
    <!-- ngInclude: main.pageContext.headerURL --><div ng-include="main.pageContext.headerURL" class="ng-scope"><header class="navbar site-nav navbar-inverse navbar-static-top ng-scope" role="navigation"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse"> <span class="sr-only ng-scope" translate="">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="logo navbar-brand" href="https://udacity.com/" id="header-logo"> <img alt="Udacity Logo" src="./submission_1_review_files/logo.min.svg"> </a> </div> <nav class="navbar-collapse collapse text-center-xs" id="navbar-collapse" role="navigation"> <ul class="nav navbar-nav navbar-right"> <!-- ngIf: isGrader() --> <!-- ngIf: isGrader() --> <li> <a data-ng-click="main.logout()" href="https://review.udacity.com/" translate="" class="ng-scope">Logout</a> </li> </ul> <ul class="nav navbar-nav navbar-right"> <li class="dropdown"> <ul class="dropdown-menu"> <a data-ng-click="main.logout()" href="https://review.udacity.com/" translate="" class="ng-scope">Logout</a> </ul> </li> </ul> </nav> </div> </header> </div>
    <div id="page-content" data-qualaroo-survey-info-hack="">
      <div loading-container="" class="container-fluid"><div ng-show="loading" class="row ng-hide"> <div class="col-sm-6 col-sm-offset-3 text-center"> <div class="row row-gap-huge"></div> <img src="./submission_1_review_files/loading.gif"> <div class="row row-gap-huge"></div> </div> </div> <div ng-show="!loading" class=""> <div ng-transclude="">
        <div class="row row-gap-medium ng-scope ng-isolate-scope ng-hide fadeOutUp animated" ng-show="!!message &amp;&amp; !dismissed" ng-class="{fadeInDown: !!message, fadeOutUp: dismissed, animated: !!message || dismissed}" alert-box=""> <div class="col-md-offset-3 col-md-6"> <div class="alert alert-success hr-slim ng-binding"> <button type="button" ng-click="dismiss()" class="close" aria-label="Close"> <span aria-hidden="true">Ã—</span> </button> <img class="icon img-initial" src="./submission_1_review_files/checkmark.svg"> </div> </div> </div>
        <!-- uiView:  --><div ui-view="" autoscroll="true" class="ng-scope"><div class="row ng-scope"> <div class="col-xs-12 col-lg-10 col-lg-offset-1"> <!-- ngIf: submission.previous_submission_id --> <div class="review-header"> <div class="project-label text-uppercase text-center">Project</div> <div class="project-name text-center ng-binding">Predicting Boston Housing Prices</div> <!-- ngIf: currentProject.nanodegree_title --><div class="nanodegree-link text-center ng-binding ng-scope" ng-if="currentProject.nanodegree_title"> A part of the Machine Learning Engineer Nanodegree Program </div><!-- end ngIf: currentProject.nanodegree_title --> </div> <div class="row row-gap-medium"></div> <div class="review-container"> <ul class="nav nav-tabs nav-justified" ng-hide="isUngradeable()"> <!-- ngIf: hasFeedback --><li ng-if="hasFeedback" ng-class="{&#39;active&#39;: isCurrentTab(&#39;feedback&#39;)}" class="ng-scope active"> <a href="https://review.udacity.com/" ng-click="showTab(&#39;feedback&#39;)">Project Review</a> </li><!-- end ngIf: hasFeedback --> <!-- ngIf: showCode --><li ng-if="showCode" ng-class="{&#39;active&#39;: isCurrentTab(&#39;code&#39;)}" class="ng-scope"> <a href="https://review.udacity.com/" ng-click="showTab(&#39;code&#39;)"> Code Review&nbsp; <!-- ngIf: commentsCount > 0 --> </a> </li><!-- end ngIf: showCode --> <!-- ngIf: annotation_link --> <li ng-class="{&#39;active&#39;: isCurrentTab(&#39;notes&#39;)}"> <a href="https://review.udacity.com/" ng-click="showTab(&#39;notes&#39;)">Notes</a> </li> <!-- ngIf: userCanCreateAudits() && !auditTabState.visible --> <!-- ngIf: auditTabState.visible --> </ul> <div class="row review-tab-body"> <div class="col-sm-10 col-sm-offset-1"> <div ng-show="isUngradeable()" class="ungradeable-tab ng-hide"> <h3 class="result-label">Unable to review</h3> <p class="ungradeable-info"> Your project could not be reviewed. Please resubmit after you address the issue noted by the reviewer. </p> <p class="result-reason ng-isolate-scope" marked="submission.result_reason"></p> <div class="row row-gap-small"></div> <!-- ngIf: isResubmittable() --> <!-- ngIf: submission.archive_url --><div ng-if="submission.archive_url" class="row row-gap-small ng-scope"> <div class="col-xs-12 text-center wide-and-bold"> <a href="https://udacity-github-sync-content.s3.amazonaws.com/_submissions/182337_b22r6.zip" download=""><img src="./submission_1_review_files/download-icon.svg" class="img-initial icon-medium">Download project files</a> </div> </div><!-- end ngIf: submission.archive_url --> <!-- ngIf: submission.url --> <div class="row row-gap-small">&nbsp;</div> </div> <div ng-hide="isUngradeable()" class=""> <div class="row row-gap-medium"></div> <section ng-show="isCurrentTab(&#39;notes&#39;)" class="ng-hide"> <!-- ngIf: pastReviews !== undefined --><div reviews-list="" ng-if="pastReviews !== undefined" reviews="pastReviews" this-review="submission" class="ng-scope ng-isolate-scope"><h2 class="review-list-name current-review-name h-slim ng-binding">Review #3 (this review)</h2> <div ng-show="thisReview.completed_at"> <small class="text-muted">Reviewed <span am-time-ago="thisReview.completed_at">1 month ago</span></small> </div> <div ng-hide="thisReview.completed_at" class="ng-hide"> <small class="text-muted">Review in progress</small> </div> <div class="text-uppercase submission-notes-header"> student notes </div> <div class="submission-notes ng-isolate-scope" marked="thisReview.notes || &#39;_None provided_&#39;"><p>Updated github repo based on feedback from submission #2. </p>
<p>Feedback has been awesome so far.</p>
</div> <!-- ngIf: filteredReviews.length > 1 --><hr ng-if="filteredReviews.length &gt; 1" class="ng-scope"><!-- end ngIf: filteredReviews.length > 1 --> <!-- ngRepeat: review in filteredReviews --><!-- ngIf: filteredReviews.length > 1 --><div ng-if="filteredReviews.length &gt; 1" ng-repeat="review in filteredReviews" class="ng-scope"> <div class="row row-gap-small"> <div class="col-xs-12"> <!-- ngIf: !(thisReview && thisReview.id === review.id) --> <!-- ngIf: thisReview && thisReview.id === review.id --><span class="review-list-name ng-scope" ng-if="thisReview &amp;&amp; thisReview.id === review.id"> This review <!-- ngIf: review.previous_submission_id --> </span><!-- end ngIf: thisReview && thisReview.id === review.id --> </div> </div> <div class="row"> <div ng-show="review.completed_at" class="col-xs-12 text-muted"> <small>Reviewed <span am-time-ago="review.completed_at">1 month ago</span></small> </div> <div ng-hide="review.completed_at" class="col-xs-12 text-muted ng-hide"> <small>Review in progress</small> </div> </div> </div><!-- end ngIf: filteredReviews.length > 1 --><!-- end ngRepeat: review in filteredReviews --><!-- ngIf: filteredReviews.length > 1 --><div ng-if="filteredReviews.length &gt; 1" ng-repeat="review in filteredReviews" class="ng-scope"> <div class="row row-gap-small"> <div class="col-xs-12"> <!-- ngIf: !(thisReview && thisReview.id === review.id) --><a class="review-list-name ng-binding ng-scope" ng-if="!(thisReview &amp;&amp; thisReview.id === review.id)" ui-sref="reviews-show({submissionId: review.id, audit: null})" target="_blank" href="https://review.udacity.com/#!/reviews/181833"> Review #2 <!-- ngIf: review.previous_submission_id --> </a><!-- end ngIf: !(thisReview && thisReview.id === review.id) --> <!-- ngIf: thisReview && thisReview.id === review.id --> </div> </div> <div class="row"> <div ng-show="review.completed_at" class="col-xs-12 text-muted"> <small>Reviewed <span am-time-ago="review.completed_at">1 month ago</span></small> </div> <div ng-hide="review.completed_at" class="col-xs-12 text-muted ng-hide"> <small>Review in progress</small> </div> </div> </div><!-- end ngIf: filteredReviews.length > 1 --><!-- end ngRepeat: review in filteredReviews --><!-- ngIf: filteredReviews.length > 1 --><div ng-if="filteredReviews.length &gt; 1" ng-repeat="review in filteredReviews" class="ng-scope"> <div class="row row-gap-small"> <div class="col-xs-12"> <!-- ngIf: !(thisReview && thisReview.id === review.id) --><a class="review-list-name ng-binding ng-scope" ng-if="!(thisReview &amp;&amp; thisReview.id === review.id)" ui-sref="reviews-show({submissionId: review.id, audit: null})" target="_blank" href="https://review.udacity.com/#!/reviews/181805"> Review #1 <!-- ngIf: review.previous_submission_id --> </a><!-- end ngIf: !(thisReview && thisReview.id === review.id) --> <!-- ngIf: thisReview && thisReview.id === review.id --> </div> </div> <div class="row"> <div ng-show="review.completed_at" class="col-xs-12 text-muted"> <small>Reviewed <span am-time-ago="review.completed_at">1 month ago</span></small> </div> <div ng-hide="review.completed_at" class="col-xs-12 text-muted ng-hide"> <small>Review in progress</small> </div> </div> </div><!-- end ngIf: filteredReviews.length > 1 --><!-- end ngRepeat: review in filteredReviews --> <div class="row row-gap-large"></div> </div><!-- end ngIf: pastReviews !== undefined --> </section> <section class="code-section ng-hide" ng-show="isCurrentTab(&#39;code&#39;)"> <!-- ngIf: files && currentRubric --><div code-review="" ng-if="files &amp;&amp; currentRubric" files="files" rubric="currentRubric" allow-comments="false" class="ng-scope ng-isolate-scope"><div ng-show="allowComments" class="ng-hide"> <input type="text" class="form-control ng-pristine ng-untouched ng-valid ng-empty" ng-model="filterPattern" placeholder="File filter (e.g. &quot;readme.md&quot;, &quot;.css&quot;, &quot;src/lib/*.js&quot;)"> <div class="row row-gap-small"></div> </div> <!-- ngRepeat: file in files --><div class="code-section-item ng-scope" ng-repeat="file in files" ng-show="isFileVisible(file)"> <div class="code-section-item-title" ng-click="setCurrentFileIndex($index)"> <small> <span ng-class="{&#39;glyphicon-triangle-right&#39;: currentFileIndex !== $index, &#39;glyphicon-triangle-bottom&#39;: currentFileIndex === $index}" class="glyphicon glyphicon-triangle-right"> </span> </small> <strong class="ng-binding">visuals.py</strong> <!-- ngIf: file.comments_count > 0 --> </div> <!-- ngIf: currentFileIndex === $index --> </div><!-- end ngRepeat: file in files --><div class="code-section-item ng-scope" ng-repeat="file in files" ng-show="isFileVisible(file)"> <div class="code-section-item-title" ng-click="setCurrentFileIndex($index)"> <small> <span ng-class="{&#39;glyphicon-triangle-right&#39;: currentFileIndex !== $index, &#39;glyphicon-triangle-bottom&#39;: currentFileIndex === $index}" class="glyphicon glyphicon-triangle-right"> </span> </small> <strong class="ng-binding">boston_housing.html</strong> <!-- ngIf: file.comments_count > 0 --> </div> <!-- ngIf: currentFileIndex === $index --> </div><!-- end ngRepeat: file in files --> </div><!-- end ngIf: files && currentRubric --> <div class="row row-gap-medium"></div> </section> <section ng-show="isCurrentTab(&#39;annotation&#39;)" class="ng-hide"> <div class="row row-gap-large"> <div class="col-xs-12 annotation-text"> Your reviewer has provided annotations for your project </div> </div> <div class="row row-gap-medium"> <div class="col-xs-12"> <a class="btn btn-primary btn-sm" href="https://review.udacity.com/" download="" _target="_blank">Download annotations</a> </div> </div> <div class="row row-gap-huge"></div> </section> <!-- ngIf: critiquesAccessor --><section ng-if="critiquesAccessor" ng-show="isCurrentTab(&#39;feedback&#39;)" class="ng-scope"> <!-- ngIf: isSubmissionByCurrentUser() --><div social-share="" ng-if="isSubmissionByCurrentUser()" user-type="&#39;student&#39;" button-hashtag="hashtag" url="getShareableUrl()" prompt="&#39;Share your accomplishment&#39;" text="&#39;Just received helpful feedback on my project from a @Udacity reviewer!&#39;" class="ng-scope ng-isolate-scope"><div class="share-table hidden-xs"> <div class="share-prompt ng-binding"> Share your accomplishment </div> <div class="pull-right"> <a ng-click="showTwitterPopup()" class="btn btn-xs"> <img src="./submission_1_review_files/twitter.svg"> </a> <a ng-click="showFacebookPopup()" class="btn btn-xs"> <img src="./submission_1_review_files/facebook.svg"> </a> </div> </div> <div class="btn-block share-table visible-xs"> Share your accomplishment!&nbsp;<a href="https://review.udacity.com/" ng-click="showTwitterPopup()"><img src="./submission_1_review_files/twitter.svg"></a>&nbsp;<a href="https://review.udacity.com/" ng-click="showFacebookPopup()"><img src="./submission_1_review_files/facebook.svg"></a> </div> </div><!-- end ngIf: isSubmissionByCurrentUser() --> <!-- ngIf: isSubmissionGradedByCurrentUser() --> <!-- ngIf: hasFeedback && submission.result --><div ng-if="hasFeedback &amp;&amp; submission.result" class="ng-scope"> <h3 class="result-label h-slim-top ng-binding"> Meets Specifications </h3> <!-- ngIf: doesNotMeetCount > 0 --> </div><!-- end ngIf: hasFeedback && submission.result --> <!-- ngIf: submission.general_comment --><div ng-if="submission.general_comment" class="row row-gap-medium ng-scope"> <div class="col-xs-12 ng-isolate-scope" marked="submission.general_comment"><p>Fantastic job here with the analysis and you have fixed all of the needed sections. Wish you the best of luck throughout this program!!</p>
<p><strong>Tip</strong>:Some of these topics are extremely important as you embark on your journey throughout your Machine Learning career and it will be well worth your time to get a great grasp on these topics before you dive deeper in.</p>
</div> </div><!-- end ngIf: submission.general_comment --> <div critiques-editor="" critiques-accessor="critiquesAccessor" editable="false" class="ng-isolate-scope"><!-- ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Data Exploration </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>All requested statistics for the Boston Housing dataset are accurately calculated. Student correctly leverages NumPy functionality to obtain these results.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>All correct here. As it is always a good idea to get a basic understanding of our dataset before doing more advanced computations</p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student correctly justifies how each feature correlates with an increase or decrease in the target variable. </p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Nice ideas for the features in this dataset. As we can also confirm this by plotting the features vs the housing prices.</p>
<pre><code><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt
plt.figure(figsize=(<span class="hljs-number">20</span>, <span class="hljs-number">5</span>))
<span class="hljs-keyword">for</span> i, col <span class="hljs-keyword">in</span> enumerate(features.columns):
    plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, i)
    plt.plot(data[col], prices, <span class="hljs-string">'o'</span>)
    plt.title(col)
    plt.xlabel(col)
    plt.ylabel(<span class="hljs-string">'prices'</span>)
</code></pre><p><a href="./submission_1_review_files/features.png" target="_blank"><img src="./submission_1_review_files/features.png" alt="features.png"></a></p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Developing a Model </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student correctly identifies whether the hypothetical model successfully captures the variation of the target variable based on the modelâ€™s R^2 score.<br>The performance metric is correctly implemented in code.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Correct here as with this high r^2 value of 92.3% we can clearly see that we have strong correlation between the true values and predictions.</p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student provides a valid reason for why a dataset is split into training and testing subsets for a model. Training and testing split is correctly implemented in code.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Spot on here with "<em>in order to get an honest evaluation of how our algorithims will perform with a data set it hasn't seen before</em>" and great use of <code>train_test_split</code> in code </p>
<ul>
<li>As we definitely need to protect against overfitting</li>
<li>As we can get a good estimate of our generalization accuracy on this testing dataset</li>
<li>As our main goal is to accurately predict on new unseen data</li>
</ul>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Analyzing Model Performance </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student correctly identifies the trend of both the training and testing curves from the graph as more training points are added. Discussion is made as to whether additional training points would benefit the model.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Nice description of the training and testing curves and exactly with the comment of "<em>Having more data will not benefit the accuracy of the predictions since the score values are converging to 0.8.</em>"</p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student correctly identifies whether the model at a max depth of 1 and a max depth of 10 suffer from either high bias or high variance, with justification using the complexity curves graph.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>I would also recommed providing a bit more visual justification for high bias here. Thus consider</p>
<ul>
<li>As a max_depth of 1 suffers from high bias, visually this is due to the low training and validation scores(also note that they are close together).</li>
<li>And a max_depth of 10 suffers from high variance, since we see a large gap between the training and validation scores, as we are basically just memorizing our training data and will not generalize well to new unseen data</li>
</ul>
<p>From lecture<br><a href="./submission_1_review_files/5.jpg" target="_blank"><img src="./submission_1_review_files/5.jpg" alt="5.jpg"></a></p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student picks a best-guess optimal model with reasonable justification using the model complexity graph.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>A max depth of 3 or 4 would both be good choices here. And great justification with "<em>we minimize both variance and bias</em>" as this is exactly one thing we are looking for. Also note that GridSearchCV finds the highest validation score which is the other big thing here.</p>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --><div ng-repeat="section in critiquesAccessor.getSections()" class="ng-scope"> <div section-critiques="" section="section" critiques="critiquesAccessor.getCritiques(section.id)" editable="editable" failed-required-placeholder="failedRequiredPlaceholder" passed-required-placeholder="passedRequiredPlaceholder" optional-placeholder="optionalPlaceholder" commenter-label="commenterLabel" state="sectionCritiquesState[section.id]" class="ng-isolate-scope"><div> <div class="row row-gap-small"></div> <h3 class="section-name ng-binding"> Evaluating Model Performance </h3> <div> <!-- ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student correctly describes the grid search technique and how it can be applied to a learning algorithm.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Good job here as giving an example maybe the best way to understand how GridSearch works.</p>
<p><strong>Note</strong>: One limitation of GridSearch is that it can be very computationally expensive when dealing with a large number of different hyperparameter and much bigger datasets. Therefore there are two other techniques that we could explore to validate our hyperparameter</p>
<ul>
<li><a href="http://scikit-learn.org/stable/modules/generated/sklearn.grid_search.RandomizedSearchCV.html#sklearn.grid_search.RandomizedSearchCV" target="_blank">RandomizedSearchCV</a> which can sample a given number of candidates from a parameter space with a specified distribution. Which performs surprisingly well!</li>
<li>Or a train / validation / test split, and we can validate our model on the validation set. Often used with much bigger datasets</li>
</ul>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student correctly describes the k-fold cross-validation technique and discusses the benefits of its application when used with grid search when optimizing a model.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>To elaborate on the comment of "<em>If we do grid search on a broken / bad dataset, the different permutations of our algorithim will return highly varying results compared to the average estimation.</em>"</p>
<p>As this is an extremely important concept in machine learning, as this allows for multiple testing datasets and is not just reliant on the particular subset of partitioned data. If you would like a simple example of this, change the 'random_state' for <code>train_test_split(features, prices, test_size=0.2, random_state='different number')</code> a few times and see how the error changes each time. Thus cross-validation better estimates the volatility by giving you the average error rate and will better represent generalization error.</p>
<p>If you would like a full run example, run this code based on the iris data set in your python shell or something and examine the print statements, as this is a great example</p>
<pre><code><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np
<span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> cross_validation
<span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets
<span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> svm

iris = datasets.load_iris()

<span class="hljs-comment"># Split the iris data into train/test data sets with 30% reserved for testing</span>
X_train, X_test, y_train, y_test = cross_validation.train_test_split(iris.data, iris.target, test_size=<span class="hljs-number">0.3</span>, random_state=<span class="hljs-number">0</span>)

<span class="hljs-comment"># Build an SVC model for predicting iris classifications using training data</span>
clf = svm.SVC(kernel=<span class="hljs-string">'linear'</span>, C=<span class="hljs-number">1</span>, probability=<span class="hljs-keyword">True</span>).fit(X_train, y_train)

<span class="hljs-comment"># Now measure its performance with the test data with single subset</span>
<span class="hljs-keyword">print</span> clf.score(X_test, y_test) 

<span class="hljs-comment"># We give cross_val_score a model, the entire data set and its "real" values, and the number of folds:</span>
scores = cross_validation.cross_val_score(clf, iris.data, iris.target, cv=<span class="hljs-number">5</span>)

<span class="hljs-comment"># Print the accuracy for each fold:</span>
<span class="hljs-keyword">print</span> scores

<span class="hljs-comment"># And the mean accuracy of all 5 folds:</span>
<span class="hljs-keyword">print</span> scores.mean()
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student correctly implements the <code>fit_model</code> function in code.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>You have correctly implemented this code. Nice job with </p>
<pre><code>params = {<span class="hljs-string">'max_depth'</span><span class="hljs-symbol">:</span> range(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>)}
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student reports the optimal model and compares this model to the one they chose earlier.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student reports the predicted selling price for the three clients listed in the provided table. Discussion is made as to whether these prices are reasonable given the data and the earlier calculated descriptive statistics.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Awesome justification for these predictions, as I really like how you have compared each with the standard deviation of the dataset. Interesting ideas with Client 1. </p>
<p>As we can also plot a histogram of all of the housing prices in this dataset and see where each of these predictions fall</p>
<pre><code><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt
plt.hist(prices, bins = <span class="hljs-number">30</span>)
<span class="hljs-keyword">for</span> price <span class="hljs-keyword">in</span> reg.predict(client_data):
    plt.axvline(price, c = <span class="hljs-string">'r'</span>, lw = <span class="hljs-number">3</span>)
</code></pre></div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --><div ng-repeat="critique in critiques" class="ng-scope"> <div row="" row-gap-small="" col-xs-12="" bg-white"="" scroll-if="isCurrentEditingCritique(critique.id)" class="ng-isolate-scope"> <!-- ngIf: isEditingCritique(critique.id) --> <!-- ngIf: !isEditingCritique(critique.id) --><div class="critique-container ng-scope ng-isolate-scope" critique-view="" critique="critique" editable="editable" edit-clicked="setEditingCritique(critique.id, true)" commenter-label="commenterLabel" ng-if="!isEditingCritique(critique.id)"><div class="critique-view-header passed"> <div class="row result-label"> <div class="col-sm-1"> <div class="result-spacing"> <span class="text-center passed"></span> </div> </div> <div class="col-xs-12 col-sm-10 critique-description ng-isolate-scope" marked="rubricItem.passed_description"><p>Student thoroughly discusses whether the model should or should not be used in a real-world setting.</p>
</div> </div> </div> <!-- ngIf: !!critique.observation --><div ng-if="!!critique.observation" class="critique-view-body ng-scope"> <div class="row"> <div class="col-xs-12 col-sm-10 col-sm-offset-1"> <div class="p-slim ng-isolate-scope" marked="critique.observation"><p>Would completely agree with your comment of</p>
<ul>
<li>"<em> Data collected almost 40 years ago would be irrelevant to today's prices as markets evolve and change, house prices and other factors such as currency value will also change.</em>"</li>
<li>"<em>The data provided on each home isn't sufficient to make accurate predictions in today's marketplace. For example, you could start taking into account features such as parks in the area or the number of universities in the city to better predict the price of a house.</em>"</li>
</ul>
</div> </div> </div> </div><!-- end ngIf: !!critique.observation --> <!-- ngIf: editable --> </div><!-- end ngIf: !isEditingCritique(critique.id) --> </div> </div><!-- end ngRepeat: critique in critiques --> </div> </div> </div> </div><!-- end ngRepeat: section in critiquesAccessor.getSections() --> <div class="row"> <!-- ngIf: !editable && submission.general_comment --> </div> <div class="row"> <!-- ngIf: !(state && state.audit) --><ng-form ng-if="!(state &amp;&amp; state.audit)" name="general-comment-form" class="ng-pristine ng-valid ng-scope"> <!-- ngIf: editable --> </ng-form><!-- end ngIf: !(state && state.audit) --> </div> <div class="row row-gap-small"></div> </div> <div class="row row-gap-small"></div> <!-- ngIf: isResubmittable() --> <div class="row row-gap-small"> <div class="col-xs-12 text-center"> <!-- ngIf: submission.archive_url --><a class="wide-and-bold ng-scope" ng-if="submission.archive_url" href="https://udacity-github-sync-content.s3.amazonaws.com/_submissions/182337_b22r6.zip" download=""> <img src="./submission_1_review_files/download-icon.svg" class="icon-medium">&nbsp;Download Project </a><!-- end ngIf: submission.archive_url --> </div> </div> <div class="row row-gap-medium"></div> </section><!-- end ngIf: critiquesAccessor --> <section ng-show="isCurrentTab(&#39;audit&#39;)" class="ng-hide"> <div audit-tab="" submission="submission" state="auditTabState" class="ng-isolate-scope"><!-- ngIf: auditCritiquesAccessor --> </div> </section> </div>  </div>  </div>  </div>  </div>  </div>  <div ng-show="isCurrentTab(&#39;feedback&#39;) || isUngradeable()" class="ng-scope"> <!-- ngIf: !hasViewedResubmissionVideo() && isResubmittable() --> </div> <!-- ngIf: hasViewedResubmissionVideo() && isResubmittable() || isSubmissionByCurrentUser() --><div ng-if="hasViewedResubmissionVideo() &amp;&amp; isResubmittable() || isSubmissionByCurrentUser()" class="row row-gap-medium ng-scope"> <div class="col-md-10 col-md-offset-1 text-center"> <!-- ngIf: hasViewedResubmissionVideo() && isResubmittable() --> <!-- ngIf: isSubmissionByCurrentUser() --><p class="slim ng-scope" ng-if="isSubmissionByCurrentUser()"> Have a question about your review? Email us at <a href="mailto:review-support@udacity.com">review-support@udacity.com</a> and include the link to this review. </p><!-- end ngIf: isSubmissionByCurrentUser() --> </div> </div><!-- end ngIf: hasViewedResubmissionVideo() && isResubmittable() || isSubmissionByCurrentUser() --> <div class="row row-gap-large ng-scope"></div> <!-- ngIf: isSubmissionByCurrentUser() && currentProject.nanodegree_key --><div ng-if="isSubmissionByCurrentUser() &amp;&amp; currentProject.nanodegree_key" class="row row-gap-medium ng-scope"> <div class="col-xs-12 text-center"> <a class="btn btn-secondary" ng-click="goToPath()" "="">Return to Path</a> </div> </div><!-- end ngIf: isSubmissionByCurrentUser() && currentProject.nanodegree_key -->  <div class="visible-xs row row-gap-medium ng-scope"> <div class="col-xs-12"> <div ng-show="!isUngradeable() &amp;&amp; showStudentFeedback" class="locked-feedback-footer"> <div ng-switch="hoverValue"> <!-- ngSwitchWhen: 1 --> <!-- ngSwitchWhen: 2 --> <!-- ngSwitchWhen: 3 --> <!-- ngSwitchWhen: 4 --> <!-- ngSwitchWhen: 5 --> <!-- ngSwitchDefault:  --><span ng-switch-default="" class="ng-scope">Rate this review</span><!-- end ngSwitchWhen: --> </div> <div class="star-rating"> <span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="5" aria-valuenow="0" aria-valuetext="" uib-rating="" state-on="&#39;feedback-star-on&#39;" state-off="&#39;feedback-star-off&#39;" on-leave="hoverValue = null" on-hover="hoverValue = value" ng-model="studentFeedback.rating" class="ng-isolate-scope ng-not-empty ng-valid">
    <!-- ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="one"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="two"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="three"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="four"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="five"></i><!-- end ngRepeat: r in range track by $index -->
</span> </div> </div> </div> </div> <!-- ngIf: shouldShowAssessmentFooter() --><footer sticky-footer="" ng-if="shouldShowAssessmentFooter()" class="row hidden-xs ng-scope sticky-footer"> <div ng-show="!isUngradeable() &amp;&amp; showStudentFeedback" class="floating-feedback-footer"> <div ng-switch="hoverValue"> <!-- ngSwitchWhen: 1 --> <!-- ngSwitchWhen: 2 --> <!-- ngSwitchWhen: 3 --> <!-- ngSwitchWhen: 4 --> <!-- ngSwitchWhen: 5 --> <!-- ngSwitchDefault:  --><span ng-switch-default="" class="ng-scope">Rate this review</span><!-- end ngSwitchWhen: --> </div> <div class="star-rating"> <span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="5" aria-valuenow="0" aria-valuetext="" uib-rating="" state-on="&#39;feedback-star-on&#39;" state-off="&#39;feedback-star-off&#39;" on-leave="hoverValue = null" on-hover="hoverValue = value" ng-model="studentFeedback.rating" class="ng-pristine ng-untouched ng-valid ng-isolate-scope ng-not-empty">
    <!-- ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="one"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="two"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="three"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="four"></i><!-- end ngRepeat: r in range track by $index --><span ng-repeat-start="r in range track by $index" class="sr-only ng-binding ng-scope">( )</span>
    <i ng-repeat-end="" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon ng-scope feedback-star-off" ng-class="$index &lt; value &amp;&amp; (r.stateOn || &#39;glyphicon-star&#39;) || (r.stateOff || &#39;glyphicon-star-empty&#39;)" ng-attr-title="{{r.title}}" title="five"></i><!-- end ngRepeat: r in range track by $index -->
</span> </div> </div> </footer><!-- end ngIf: shouldShowAssessmentFooter() --> <div class="row row-gap-medium ng-scope"></div> <div id="comment-wrapper" class="ng-scope"></div> </div>
      </div> </div> </div>
    </div>

    <!-- ngInclude: main.pageContext.footerURL --><div ng-include="main.pageContext.footerURL" class="ng-scope"><footer id="footer" ng-controller="FooterCtrl as ctrl" class="ng-scope"> <div class="container"> <ul class="nav nav-pills"> <!-- ngIf: currentUser && currentUser.role !== 'student' --> <li><a ui-sref="submissions.student-faq" href="https://review.udacity.com/#!/submissions/student-faq">Student FAQ</a></li> </ul> </div> </footer> </div>

    <script src="./submission_1_review_files/jquery.min.js"></script>
    <script src="./submission_1_review_files/materialize.min.js"></script>

    <script type="text/javascript" src="./submission_1_review_files/airbrake-shim.js" data-airbrake-project-id="108424" data-airbrake-project-key="585b2c42b7a3ccfb360e6b1461185702" data-airbrake-environment-name="production"></script>
    <script data-airbrake-onload="initAirbrake">
      function initAirbrake() {
        Airbrake.addFilter(function (notice) {
          console.log(notice);
          return true;
        });
      }
    </script>
    <script src="./submission_1_review_files/angular.min.js"></script>

    <!-- inject:js -->
    <script src="./submission_1_review_files/_vendor_891f0480.js"></script>
    <script src="./submission_1_review_files/grading_891f0480.js"></script>
    <script src="./submission_1_review_files/airbrake-shim.js"></script>
    <!-- endinject -->
  

<div class="hiddendiv common"></div></body></html>